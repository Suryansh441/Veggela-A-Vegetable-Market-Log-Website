{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vegella_MERN\\\\frontend\\\\src\\\\COMPONENTS\\\\VegetablePricePrediction.js\",\n  _s = $RefreshSig$();\n// VegetablePricePrediction.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './VegetablePricePrediction.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VegetablePricePrediction() {\n  _s();\n  const [vegetable, setVegetable] = useState('');\n  const [month, setMonth] = useState('');\n  const [estimatedPrice, setEstimatedPrice] = useState(null);\n  const [vegetableNames, setVegetableNames] = useState([]);\n  const onClickedEstimatePrice = () => {\n    // Make a POST request to predict_vegetable_price endpoint\n    axios.post('/predict_vegetable_price', {\n      vegetable,\n      month: parseFloat(month)\n    }).then(response => {\n      setEstimatedPrice(response.data.estimated_price);\n    }).catch(error => {\n      console.error('Error predicting vegetable price:', error);\n    });\n  };\n  useEffect(() => {\n    // Fetch vegetable names from Flask server when the component mounts\n    axios.get('/get_vegetable_names').then(response => {\n      setVegetableNames(response.data.vegetables);\n    }).catch(error => {\n      console.error('Error fetching vegetable names:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vegetable-price-prediction\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vegetable Price Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a Vegetable:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: vegetable,\n        onChange: e => setVegetable(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: \"disabled\",\n          children: \"Choose a Vegetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), vegetableNames.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"uiSqft\",\n        className: \"area\",\n        name: \"Squareft\",\n        value: month,\n        onChange: e => setMonth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit\",\n      onClick: onClickedEstimatePrice,\n      type: \"button\",\n      children: \"Estimate Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), estimatedPrice !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [estimatedPrice, \" Rupees\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(VegetablePricePrediction, \"mzRU8uSL6d8klfT5kAj/y72h3/k=\");\n_c = VegetablePricePrediction;\nexport default VegetablePricePrediction;\nvar _c;\n$RefreshReg$(_c, \"VegetablePricePrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","VegetablePricePrediction","_s","vegetable","setVegetable","month","setMonth","estimatedPrice","setEstimatedPrice","vegetableNames","setVegetableNames","onClickedEstimatePrice","post","parseFloat","then","response","data","estimated_price","catch","error","console","get","vegetables","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","name","type","id","onClick","_c","$RefreshReg$"],"sources":["D:/Vegella_MERN/frontend/src/COMPONENTS/VegetablePricePrediction.js"],"sourcesContent":["// VegetablePricePrediction.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './VegetablePricePrediction.css'; // Import the CSS file\r\n\r\nfunction VegetablePricePrediction() {\r\n    const [vegetable, setVegetable] = useState('');\r\n    const [month, setMonth] = useState('');\r\n    const [estimatedPrice, setEstimatedPrice] = useState(null);\r\n    const [vegetableNames, setVegetableNames] = useState([]);\r\n\r\n    const onClickedEstimatePrice = () => {\r\n        // Make a POST request to predict_vegetable_price endpoint\r\n        axios.post('/predict_vegetable_price', {\r\n            vegetable,\r\n            month: parseFloat(month)\r\n        })\r\n        .then(response => {\r\n            setEstimatedPrice(response.data.estimated_price);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error predicting vegetable price:', error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch vegetable names from Flask server when the component mounts\r\n        axios.get('/get_vegetable_names')\r\n            .then(response => {\r\n                setVegetableNames(response.data.vegetables);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching vegetable names:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"vegetable-price-prediction\">\r\n            <h1>Vegetable Price Prediction</h1>\r\n            <div>\r\n                <label>Select a Vegetable:</label>\r\n                <select value={vegetable} onChange={(e) => setVegetable(e.target.value)}>\r\n                    <option value=\"\" disabled=\"disabled\">Choose a Vegetable</option>\r\n                    {vegetableNames.map(name => (\r\n                        <option key={name} value={name}>{name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Select a Month:</label>\r\n                <input type=\"text\" id=\"uiSqft\" className=\"area\" name=\"Squareft\" value={month} onChange={(e) => setMonth(e.target.value)} />\r\n            </div>\r\n            <button className=\"submit\" onClick={onClickedEstimatePrice} type=\"button\">Estimate Price</button>\r\n            {estimatedPrice !== null && <div className=\"result\"><h2>{estimatedPrice} Rupees</h2></div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VegetablePricePrediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}